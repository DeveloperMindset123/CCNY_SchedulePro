// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// @see https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project/relational-databases/connect-your-database-typescript-postgresql

// TODO : Cleanup comments afterwards
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // this is where the databse connection tkaes place
  url      = env("DATABASE_URL")
}

// * @see https://www.prisma.io/docs/orm/reference/prisma-schema-reference --> for what the different values represent
// ! @see https://www.prisma.io/docs/orm/reference/prisma-schema-reference#id --> explains id
model User {
  id                String          @id @unique @default(uuid())
  email             String          @unique
  password          String
  // ** Horrible security practice btw, but just for the sake of making things work atm, implement solution before pushing to production
  plainTextPassword String?
  refreshTokens     RefreshTokens[]
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model RefreshTokens {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserRegistrationDetails {
  // TODO : Logic to randomly generate this value
  userID         Int     @id @unique @db.Integer
  // String type to support alphanumeric values
  username       String  @unique
  // this will be the identifier to link us to the User database, allowing us to know which registered user's information this is associated with
  emailDuplicate String  @unique
  degreeType     String
  major          String
  // ? to indicate that DOB should be optional
  DOB            String?
  CollegeYear    Int
  pronouns       String?
  Hobbies        String?
  Gender         String
}
